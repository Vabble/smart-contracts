===================== Swap =========================
// 2023-08-02 Polygon mumbai
VABTokenSwap (0xD46703dC21f717ef5Cd2fb44c849037425ABDcde)

oldVAB: "0x5cBbA5484594598a660636eFb0A1AD953aFa4e32", // vab
newVAB: "0x53BeF80E0EBE5A89dfb67782b12435aBeB943754", // exm


// 2023-08-09 Polygon mainnet
VABTokenSwap (0xc38a372E1604F9c28b23524848048e1e0dc1b84f)

oldVAB: "0xed28b1890fbb4aa9ded528c1034fed278ff68f5d",
newVAB: "0xf27BeDc0C8a29DF0c4F91493EBa24814fF04D504",


===================== Bridge =========================
=> 2023-09-26
FxERC20RootTunnel (0xEf1d5C1D8b7590F4D6E97c34095CB9A7db1Cd92D)  // goerli
FxERC20ChildTunnel (0x450256da17aA67030652ADF9C617437B4B4D6900) // mumbai

root token: "0x482a493EA47903a571b20E35B770aFfE06600a3D", // goerli
child token: 0x2823005CaB120c67C849D75d8D905908Db96D182 , // VAB

mapToken() : 24 mins
deposit()  : < 30 mins
withdraw() : 30 ~ 180 mins


Auditor wallet address: 0xb10bcC8B508174c761CFB1E7143bFE37c4fBC3a1



===================== Bridge =========================
=> 2023-12-30 - 01
FXERC20: 
0x0F42a5f2a3757636b6b9c013470e190B8400CE3e // mumbai

FxERC20RootTunnel (0xFd6dc52997F6A450f073678981b87A3513aF851f)  // goerli
FxERC20ChildTunnel (0x67D57ee3281479bbb868f856298F4805d24B476e) // mumbai

root token: 0x482a493EA47903a571b20E35B770aFfE06600a3D // goerli
child token:  0x0F42a5f2a3757636b6b9c013470e190B8400CE3e // mumbai

Auditor wallet address: 0xb10bcC8B508174c761CFB1E7143bFE37c4fBC3a1


=> 2023-12-30 - 02
FXERC20: 
0x571C39481c71d72b03278b0FB568658EC477ee82 // mumbai

FxERC20RootTunnel (0xB3DCA9531aA5297F01E9dcA6aB443c49CD13f6a9)  // goerli
FxERC20ChildTunnel (0x224f9821b5B94573d53e80640df15E55dcB83ea4) // mumbai

root token: 0x482a493EA47903a571b20E35B770aFfE06600a3D // goerli
child token:  0x571C39481c71d72b03278b0FB568658EC477ee82 // mumbai

Auditor wallet address: 0xb10bcC8B508174c761CFB1E7143bFE37c4fBC3a1


=> 2023-12-30 - 03
FXERC20: 
0xFF84f94e95EEe9f1BF6A22b20BB44796626dA653 // mumbai

FxERC20RootTunnel (0xcB50A7Ab42eB4eC5Ae8E9e838ED78B098c359B1D)  // goerli
FxERC20ChildTunnel (0xD9EDD36bDcd550e587c1Db264Fa26c2f353c8eAF) // mumbai

root token: 0x482a493EA47903a571b20E35B770aFfE06600a3D // goerli
child token:  0xFF84f94e95EEe9f1BF6A22b20BB44796626dA653 // mumbai

Auditor wallet address: 0xb10bcC8B508174c761CFB1E7143bFE37c4fBC3a1

=> 2023-12-31 - 01
FXERC20: 
0x793A08C343F33b4e93Fa5DcC3Dc3292e19Dcc510 // mumbai

FxERC20RootTunnel (0xfb23300A0E6AF340776Cf24Bf172805bfcAFDF47)  // goerli
FxERC20ChildTunnel (0xa9222B40cb085701358B2b04F9c9A94Cf44CF8EA) // mumbai

root token: 0x482a493EA47903a571b20E35B770aFfE06600a3D // goerli
child token: 0x793A08C343F33b4e93Fa5DcC3Dc3292e19Dcc510  // mumbai

Auditor wallet address: 0xb10bcC8B508174c761CFB1E7143bFE37c4fBC3a1


=> Generate Proof API                
https://proof-generator.polygon.technology/api/v1/mumbai/exit-payload/withdraw-tx-hash?eventSignature=SEND_MESSAGE_EVENT_SIG
https://proof-generator.polygon.technology/api/v1/matic/exit-payload/withdraw-tx-hash?eventSignature=SEND_MESSAGE_EVENT_SIG

Run receiveMessage() with result from API response and Get token back

API Example:
https://proof-generator.polygon.technology/api/v1/mumbai/exit-payload/0x4756b76a9611cffee3d2eb645819e988c34615621ea256f818ab788d81e1f838?eventSignature=0x8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036

https://proof-generator.polygon.technology/api/v1/mumbai/exit-payload/0x06e1f01a5ac87d9b54d684cbe44a37e2c2805c0dd9657583a1c05127fd1d4532?eventSignature=0x8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036

https://proof-generator.polygon.technology/api/v1/mumbai/exit-payload/0xba2960d5815a45852f39c341ab51852adc661b9fd4194c2174d5d2a259ed6f96?eventSignature=0x8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036

======================== Deploy Goerli <-> Mumbai Bridge Steps ===========================================
Change Wallet Private Key(MNEMONIC) in .env

1. Deploy FXERC20
    1.1 comment deploy_child
    1.2 change NETWORK to 'Mumbai' in utils.js
    1.3 npm run mumbai:deploy
    1.4 npm run mumbai:verify
    1.5 save Deployed FXERC20's address
    1.6 update testnet's fxERC20, childToken in utils.js - IMPORTANT
    1.7 Create Pair in uniswap factory on Mumbai    
2. Deploy FxERC20RootTunnel to Geoerli
    2.1 uncomment deploy_child
    2.2 change NETWORK to Goerli in utils.js
    2.3 Prepare Root Token, Child Token's Name, Symbol, and Decimals
    2.4 npm run goerli:deploy
    2.5 npm run goerli:verify
    2.6 save Deployed FxERC20RootTunnel's address    
3. Deploy FxERC20ChildTunnel to Mumbai
    3.1 uncomment deploy_child
    3.2 change NETWORK to Mumbai in utils.js
    3.3 npm run mumbai:deploy
    3.4 npm run mumbai:verify
    3.5 save Deployed FxERC20ChildTunnel's address
    3.6 import child token on wallet in Mumbai Network
4. Setup Bridge
    4.1 update ChildTunnel of FxERC20RootTunnel in goerli
    4.2 update RootTunnel of FxERC20ChildTunnel in mumbai
5. Root Token -> FxERC20RootTunnel(spender) in goerli 
6. Test Steps
    6.1 Record current balance of rook Token, child token
    6.2 deposit in FxERC20RootTunnel
    6.3 check if the balance of rook token is decreased
    6.4 Wait 20 ~ 30mins and check the balance of childToken in Wallet in Mumbai

    6.5 Record current balance of rook Token, child token
    6.6 withdraw from FxERC20ChildTunnel
    6.7 check if the balance of child token is decreased
    6.8 Wait 30mins
    6.9 Call Generate Proof API  
    6.10 check the balance of rootToken in Wallet in Geoerli
    
======================== Deploy Ethereum <-> Polygon Bridge Steps ===========================================
1. Deploy FXERC20
    1.1 comment deploy_child
    1.2 change NETWORK to 'Polygon' in utils.js
    1.3 npm run matic:deploy
    1.4 npm run matic:verify
    1.5 save Deployed FXERC20's address
    1.6 update mainnet's fxERC20, childToken in utils.js
    1.7 Create Pair in uniswap factory on Polygon
2. Deploy FxERC20RootTunnel to Ethereum
    2.1 uncomment deploy_child
    2.2 change NETWORK to Ethereum in utils.js
    2.3 Prepare Root Token, Child Token's Name, Symbol, and Decimals
    2.4 npm run mainnet:deploy
    2.5 npm run mainnet:verify
    2.6 save Deployed FxERC20RootTunnel's address   
3. Deploy FxERC20ChildTunnel to Polygon
    3.1 uncomment deploy_child
    3.2 change NETWORK to Polygon in utils.js
    3.3 npm run matic:deploy
    3.4 npm run matic:verify
    3.5 save Deployed FxERC20ChildTunnel's address
    3.6 import child token on wallet in Mumbai Network
4. Setup Bridge
    4.1 update ChildTunnel of FxERC20RootTunnel in ethereum
    4.2 update RootTunnel of FxERC20ChildTunnel in polygon
5. Root Token -> FxERC20RootTunnel(spender) in ethereum 
6. Test Steps
    6.2 Record current balance of rook Token, child token
    6.3 deposit in FxERC20RootTunnel
    6.4 check if the balance of rook token is decreased
    6.5 Wait some time and check the balance of childToken in Wallet in Polygon

    6.6 Record current balance of rook Token, child token
    6.7 withdraw from FxERC20ChildTunnel
    6.8 check if the balance of child token is decreased
    6.9 Wait 30mins
    6.10 Call Generate Proof API  
    6.11 check the balance of rootToken in Wallet in Geoerli
    